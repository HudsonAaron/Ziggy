// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.2
// source: init_pb.proto

// 基础相关

package gproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 心跳
type InitHeartBeatC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitHeartBeatC) Reset() {
	*x = InitHeartBeatC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitHeartBeatC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitHeartBeatC) ProtoMessage() {}

func (x *InitHeartBeatC) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitHeartBeatC.ProtoReflect.Descriptor instead.
func (*InitHeartBeatC) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{0}
}

// 心跳回复
type InitHeartBeatS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 服务器时间戳
}

func (x *InitHeartBeatS) Reset() {
	*x = InitHeartBeatS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitHeartBeatS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitHeartBeatS) ProtoMessage() {}

func (x *InitHeartBeatS) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitHeartBeatS.ProtoReflect.Descriptor instead.
func (*InitHeartBeatS) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{1}
}

func (x *InitHeartBeatS) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 同步机台唯一码
type InitMachineIdC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId      string  `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`                   // 机台唯一码
	SeatId         []int32 `protobuf:"varint,2,rep,packed,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`                    // 还有用户在的机台站位
	IsRefreshCkqid int32   `protobuf:"varint,3,opt,name=is_refresh_ckqid,json=isRefreshCkqid,proto3" json:"is_refresh_ckqid,omitempty"` // 1：true，清除ckqid器缓存。0：保留ckqid。
	MachineType    int32   `protobuf:"varint,4,opt,name=machine_type,json=machineType,proto3" json:"machine_type,omitempty"`            // 机台类型（4：四人版 | 2：双人版）
	MachineLang    int32   `protobuf:"varint,5,opt,name=machine_lang,json=machineLang,proto3" json:"machine_lang,omitempty"`            // 机台语言版本（1：简体中文 | 2：繁体中文 | 3：英文 | 4：日文）
	MachineVer     string  `protobuf:"bytes,6,opt,name=machine_ver,json=machineVer,proto3" json:"machine_ver,omitempty"`                // 当前机台版本号
	NewMachineVer  string  `protobuf:"bytes,7,opt,name=new_machine_ver,json=newMachineVer,proto3" json:"new_machine_ver,omitempty"`     // 当前机台最新的版本号
}

func (x *InitMachineIdC) Reset() {
	*x = InitMachineIdC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMachineIdC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMachineIdC) ProtoMessage() {}

func (x *InitMachineIdC) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMachineIdC.ProtoReflect.Descriptor instead.
func (*InitMachineIdC) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{2}
}

func (x *InitMachineIdC) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *InitMachineIdC) GetSeatId() []int32 {
	if x != nil {
		return x.SeatId
	}
	return nil
}

func (x *InitMachineIdC) GetIsRefreshCkqid() int32 {
	if x != nil {
		return x.IsRefreshCkqid
	}
	return 0
}

func (x *InitMachineIdC) GetMachineType() int32 {
	if x != nil {
		return x.MachineType
	}
	return 0
}

func (x *InitMachineIdC) GetMachineLang() int32 {
	if x != nil {
		return x.MachineLang
	}
	return 0
}

func (x *InitMachineIdC) GetMachineVer() string {
	if x != nil {
		return x.MachineVer
	}
	return ""
}

func (x *InitMachineIdC) GetNewMachineVer() string {
	if x != nil {
		return x.NewMachineVer
	}
	return ""
}

// 同步机台唯一码
type InitMachineIdS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                              // 返回码
	Msg        string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                                 // 返回参数
	MachineVer string `protobuf:"bytes,3,opt,name=machine_ver,json=machineVer,proto3" json:"machine_ver,omitempty"` // 当前机台应该跑的版本号
}

func (x *InitMachineIdS) Reset() {
	*x = InitMachineIdS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitMachineIdS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitMachineIdS) ProtoMessage() {}

func (x *InitMachineIdS) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitMachineIdS.ProtoReflect.Descriptor instead.
func (*InitMachineIdS) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{3}
}

func (x *InitMachineIdS) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InitMachineIdS) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *InitMachineIdS) GetMachineVer() string {
	if x != nil {
		return x.MachineVer
	}
	return ""
}

// 获取二维码 - 登录
type InitQrcodeC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId string  `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"` // 机台唯一码
	SeatId    []int32 `protobuf:"varint,2,rep,packed,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`  // 机台站位
}

func (x *InitQrcodeC) Reset() {
	*x = InitQrcodeC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitQrcodeC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitQrcodeC) ProtoMessage() {}

func (x *InitQrcodeC) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitQrcodeC.ProtoReflect.Descriptor instead.
func (*InitQrcodeC) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{4}
}

func (x *InitQrcodeC) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *InitQrcodeC) GetSeatId() []int32 {
	if x != nil {
		return x.SeatId
	}
	return nil
}

// 回复获取二维码 - 登录
type InitQrcodeS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                                              // 返回码
	Msg             string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                                                 // 返回参数
	MachineId       string   `protobuf:"bytes,3,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`                    // 机台唯一码
	SeatId          []int32  `protobuf:"varint,4,rep,packed,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`                     // 机台站位
	Path            []string `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`                                               // 二维码下载路径（仅对国内版有数据返回）
	Url             []string `protobuf:"bytes,6,rep,name=url,proto3" json:"url,omitempty"`                                                 // 非国内版时为二维码URL，机台自行生成普通二维码
	ExpireTimestamp int32    `protobuf:"varint,7,opt,name=expire_timestamp,json=expireTimestamp,proto3" json:"expire_timestamp,omitempty"` // 二维码过期 时间戳
}

func (x *InitQrcodeS) Reset() {
	*x = InitQrcodeS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitQrcodeS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitQrcodeS) ProtoMessage() {}

func (x *InitQrcodeS) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitQrcodeS.ProtoReflect.Descriptor instead.
func (*InitQrcodeS) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{5}
}

func (x *InitQrcodeS) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InitQrcodeS) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *InitQrcodeS) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *InitQrcodeS) GetSeatId() []int32 {
	if x != nil {
		return x.SeatId
	}
	return nil
}

func (x *InitQrcodeS) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *InitQrcodeS) GetUrl() []string {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *InitQrcodeS) GetExpireTimestamp() int32 {
	if x != nil {
		return x.ExpireTimestamp
	}
	return 0
}

// 获取二维码-存档（TODO 准备移除）
type InitQrcodeSaveC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId string  `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"` // 机台唯一码
	SeatId    []int32 `protobuf:"varint,2,rep,packed,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`  // 机台站位
}

func (x *InitQrcodeSaveC) Reset() {
	*x = InitQrcodeSaveC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitQrcodeSaveC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitQrcodeSaveC) ProtoMessage() {}

func (x *InitQrcodeSaveC) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitQrcodeSaveC.ProtoReflect.Descriptor instead.
func (*InitQrcodeSaveC) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{6}
}

func (x *InitQrcodeSaveC) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *InitQrcodeSaveC) GetSeatId() []int32 {
	if x != nil {
		return x.SeatId
	}
	return nil
}

// 回复获取二维码-存档（TODO 准备移除）
type InitQrcodeSaveS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`                                              // 返回码
	Msg             string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                                                 // 返回参数
	MachineId       string   `protobuf:"bytes,3,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`                    // 机台唯一码
	SeatId          []int32  `protobuf:"varint,4,rep,packed,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`                     // 机台站位
	Path            []string `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`                                               // 二维码下载路径
	ExpireTimestamp int32    `protobuf:"varint,6,opt,name=expire_timestamp,json=expireTimestamp,proto3" json:"expire_timestamp,omitempty"` // 二维码过期 时间戳
}

func (x *InitQrcodeSaveS) Reset() {
	*x = InitQrcodeSaveS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_init_pb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitQrcodeSaveS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitQrcodeSaveS) ProtoMessage() {}

func (x *InitQrcodeSaveS) ProtoReflect() protoreflect.Message {
	mi := &file_init_pb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitQrcodeSaveS.ProtoReflect.Descriptor instead.
func (*InitQrcodeSaveS) Descriptor() ([]byte, []int) {
	return file_init_pb_proto_rawDescGZIP(), []int{7}
}

func (x *InitQrcodeSaveS) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InitQrcodeSaveS) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *InitQrcodeSaveS) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *InitQrcodeSaveS) GetSeatId() []int32 {
	if x != nil {
		return x.SeatId
	}
	return nil
}

func (x *InitQrcodeSaveS) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *InitQrcodeSaveS) GetExpireTimestamp() int32 {
	if x != nil {
		return x.ExpireTimestamp
	}
	return 0
}

var File_init_pb_proto protoreflect.FileDescriptor

var file_init_pb_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x5f,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x22, 0x31, 0x0a, 0x11,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x65, 0x61, 0x74, 0x5f,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x84, 0x02, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x5f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x63, 0x6b, 0x71, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x43, 0x6b, 0x71, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x56,
	0x65, 0x72, 0x22, 0x47, 0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x0d,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4c, 0x0a, 0x12,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65,
	0x5f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x69,
	0x6e, 0x69, 0x74, 0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x3b, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_init_pb_proto_rawDescOnce sync.Once
	file_init_pb_proto_rawDescData = file_init_pb_proto_rawDesc
)

func file_init_pb_proto_rawDescGZIP() []byte {
	file_init_pb_proto_rawDescOnce.Do(func() {
		file_init_pb_proto_rawDescData = protoimpl.X.CompressGZIP(file_init_pb_proto_rawDescData)
	})
	return file_init_pb_proto_rawDescData
}

var file_init_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_init_pb_proto_goTypes = []interface{}{
	(*InitHeartBeatC)(nil),  // 0: gproto.init_heart_beat_c
	(*InitHeartBeatS)(nil),  // 1: gproto.init_heart_beat_s
	(*InitMachineIdC)(nil),  // 2: gproto.init_machine_id_c
	(*InitMachineIdS)(nil),  // 3: gproto.init_machine_id_s
	(*InitQrcodeC)(nil),     // 4: gproto.init_qrcode_c
	(*InitQrcodeS)(nil),     // 5: gproto.init_qrcode_s
	(*InitQrcodeSaveC)(nil), // 6: gproto.init_qrcode_save_c
	(*InitQrcodeSaveS)(nil), // 7: gproto.init_qrcode_save_s
}
var file_init_pb_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_init_pb_proto_init() }
func file_init_pb_proto_init() {
	if File_init_pb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_init_pb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitHeartBeatC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_init_pb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitHeartBeatS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_init_pb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMachineIdC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_init_pb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitMachineIdS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_init_pb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitQrcodeC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_init_pb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitQrcodeS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_init_pb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitQrcodeSaveC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_init_pb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitQrcodeSaveS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_init_pb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_init_pb_proto_goTypes,
		DependencyIndexes: file_init_pb_proto_depIdxs,
		MessageInfos:      file_init_pb_proto_msgTypes,
	}.Build()
	File_init_pb_proto = out.File
	file_init_pb_proto_rawDesc = nil
	file_init_pb_proto_goTypes = nil
	file_init_pb_proto_depIdxs = nil
}
